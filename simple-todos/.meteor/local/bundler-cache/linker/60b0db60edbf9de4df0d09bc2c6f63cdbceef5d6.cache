[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nReactiveDict = Package['reactive-dict'].ReactiveDict;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"tasks.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// imports/api/tasks.js                                                     //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nmodule.export({Tasks:function(){return Tasks}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});\n                                                                            // 2\n                                                                            // 3\n                                                                            //\nvar Tasks = new Mongo.Collection('tasks');                                  // 5\n                                                                            //\nMeteor.methods({                                                            // 7\n  'tasks.insert': function () {                                             // 8\n    function tasksInsert(text) {                                            // 7\n      check(text, String);                                                  // 9\n                                                                            //\n      // Make sure the user is logged in before inserting a task            // 11\n      if (!this.userId) {                                                   // 12\n        throw new Meteor.Error('not-authorized');                           // 13\n      }                                                                     // 14\n                                                                            //\n      Tasks.insert({                                                        // 16\n        text: text,                                                         // 17\n        createdAt: new Date(),                                              // 18\n        owner: this.userId,                                                 // 19\n        username: Meteor.users.findOne(this.userId).username                // 20\n      });                                                                   // 16\n    }                                                                       // 22\n                                                                            //\n    return tasksInsert;                                                     // 7\n  }(),                                                                      // 7\n  'tasks.remove': function () {                                             // 23\n    function tasksRemove(taskId) {                                          // 7\n      check(taskId, String);                                                // 24\n                                                                            //\n      Tasks.remove(taskId);                                                 // 26\n    }                                                                       // 27\n                                                                            //\n    return tasksRemove;                                                     // 7\n  }(),                                                                      // 7\n  'tasks.setChecked': function () {                                         // 28\n    function tasksSetChecked(taskId, setChecked) {                          // 7\n      check(taskId, String);                                                // 29\n      check(setChecked, Boolean);                                           // 30\n                                                                            //\n      Tasks.update(taskId, { $set: { checked: setChecked } });              // 32\n    }                                                                       // 33\n                                                                            //\n    return tasksSetChecked;                                                 // 7\n  }()                                                                       // 7\n});                                                                         // 7\n//////////////////////////////////////////////////////////////////////////////\n\n}]}},\"server\":{\"main.js\":[\"meteor/meteor\",\"../imports/api/tasks.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/main.js                                                           //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});\n                                                                            //\nMeteor.startup(function () {module.import('../imports/api/tasks.js');       // 3\n                                                                            // 4\n});                                                                         // 5\n//////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/api/tasks.js","/server/main.js"],"names":["Meteor","Mongo","check","Tasks","Collection","methods","text","String","userId","Error","insert","createdAt","Date","owner","username","users","findOne","taskId","remove","setChecked","Boolean","update","$set","checked","startup"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAMC,QAAQ,IAAIF,MAAMG,UAAV,CAAqB,OAArB,CAAd;;AAEPJ,OAAOK,OAAP,CAAe;AACb,gBADa;AAAA,yBACEC,IADF,EACQ;AACnBJ,YAAMI,IAAN,EAAYC,MAAZ;;AAEA;AACA,UAAI,CAAE,KAAKC,MAAX,EAAmB;AACjB,cAAM,IAAIR,OAAOS,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDN,YAAMO,MAAN,CAAa;AACXJ,kBADW;AAEXK,mBAAW,IAAIC,IAAJ,EAFA;AAGXC,eAAO,KAAKL,MAHD;AAIXM,kBAAUd,OAAOe,KAAP,CAAaC,OAAb,CAAqB,KAAKR,MAA1B,EAAkCM;AAJjC,OAAb;AAMD;;AAfY;AAAA;AAgBb,gBAhBa;AAAA,yBAgBEG,MAhBF,EAgBU;AACrBf,YAAMe,MAAN,EAAcV,MAAd;;AAEAJ,YAAMe,MAAN,CAAaD,MAAb;AACD;;AApBY;AAAA;AAqBb,oBArBa;AAAA,6BAqBMA,MArBN,EAqBcE,UArBd,EAqB0B;AACrCjB,YAAMe,MAAN,EAAcV,MAAd;AACAL,YAAMiB,UAAN,EAAkBC,OAAlB;;AAEAjB,YAAMkB,MAAN,CAAaJ,MAAb,EAAqB,EAAEK,MAAM,EAAEC,SAASJ,UAAX,EAAR,EAArB;AACD;;AA1BY;AAAA;AAAA,CAAf,+E;;;;;;;;;;;ACNA,SAASnB,MAAT,QAAuB,eAAvB;;AAEAA,OAAOwB,OAAP,CAAe,YAAM;AACnB,SAAO,yBAAP;AACD,CAFD,+E","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\n \r\nexport const Tasks = new Mongo.Collection('tasks');\r\n \r\nMeteor.methods({\r\n  'tasks.insert'(text) {\r\n    check(text, String);\r\n \r\n    // Make sure the user is logged in before inserting a task\r\n    if (! this.userId) {\r\n      throw new Meteor.Error('not-authorized');\r\n    }\r\n \r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(),\r\n      owner: this.userId,\r\n      username: Meteor.users.findOne(this.userId).username,\r\n    });\r\n  },\r\n  'tasks.remove'(taskId) {\r\n    check(taskId, String);\r\n \r\n    Tasks.remove(taskId);\r\n  },\r\n  'tasks.setChecked'(taskId, setChecked) {\r\n    check(taskId, String);\r\n    check(setChecked, Boolean);\r\n \r\n    Tasks.update(taskId, { $set: { checked: setChecked } });\r\n  },\r\n});","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  import '../imports/api/tasks.js';\n});\n"]}}]